{"version":3,"sources":["firebase.js","InputNewItem.js","RemoveItem.js","UpdateItem.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","InputNewItem","handleInputChange","e","setState","userInput","target","value","handleDeptChange","dept","handleSubmit","preventDefault","itemNotCompletedArray","state","database","ref","child","push","onSubmit","this","htmlFor","type","id","onChange","placeholder","required","name","icon","Component","RemoveItem","remove","onClick","UpdateItem","handleShowDropdown","item","props","updatedItem","Object","values","showDropdownBool","showDropdown","itemToEdit","console","log","handleDeptUpdate","newDept","handleUpdateSubmit","deletePath","itemKey","updatedItemNotCompletedArray","dbRef","className","library","add","farEdit","farSave","farTrashAlt","farCheckSquare","farSquare","faPlusSquare","farMinusSquare","App","removeItemFromDb","deptOrAisle","on","data","val","departments","markCompleted","bool","completePath","update","0","enterItem","firebaseDataObject","deptArray","keys","map","key","singleDept","i","itemsArray","completed","idKey","itemIds","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd275dcf.chunk.js","sourcesContent":["// firebase.js\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// initialize Firebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD8udE2U7TL4QkyIKPVceMFJozTsSvu9jQ\",\r\n    authDomain: \"jonathanlynprojectfive.firebaseapp.com\",\r\n    databaseURL: \"https://jonathanlynprojectfive.firebaseio.com\",\r\n    projectId: \"jonathanlynprojectfive\",\r\n    storageBucket: \"jonathanlynprojectfive.appspot.com\",\r\n    messagingSenderId: \"374788941465\",\r\n    appId: \"1:374788941465:web:ed5d089d392b3035eafa08\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass InputNewItem extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInput: '',\r\n            dept: 'Unknown',\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            userInput: e.target.value\r\n        }) \r\n    }\r\n\r\n    handleDeptChange = (e) => {\r\n        this.setState({\r\n            dept: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let inputted = this.state.userInput\r\n        let itemNotCompletedArray = [false, inputted]\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.child(this.state.dept).push(itemNotCompletedArray);\r\n        this.setState({\r\n            userInput: ''\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <form onSubmit={(this.state.userInput !== '') ? this.handleSubmit : null} >\r\n                <label htmlFor=\"newItem\">Enter item: </label>\r\n                <input \r\n                    type=\"text\"\r\n                    id='newItem'\r\n                    value={this.state.userInput}\r\n                    onChange={this.handleInputChange}\r\n                    placeholder=\"Please enter an item\"\r\n                    required\r\n                />\r\n                <label htmlFor=\"location\"> Dept / aisle: </label>\r\n                <select name=\"location\" id=\"location\" onChange={this.handleDeptChange}>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                    <option value=\"Deli\">Deli</option>\r\n                    <option value=\"Meat\">Meat</option>\r\n                    <option value=\"Produce\">Produce</option>\r\n                    <option value=\"Seafood\">Seafood</option>\r\n                </select>\r\n                <button>\r\n                    <FontAwesomeIcon      \r\n                        icon={[\"far\", \"plus-square\"]} \r\n                        type=\"submit\" \r\n                    />      \r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputNewItem;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst RemoveItem = ({ remove }) => {\r\n        return (\r\n            <p><FontAwesomeIcon onClick={ remove } icon={[\"far\", \"minus-square\"]}/></p>\r\n        )\r\n    }\r\n\r\nexport default RemoveItem;","import { Component } from 'react';\r\nimport firebase from \"./firebase.js\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass UpdateItem extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            itemToEdit: '',\r\n            newDept: 'Unknown',\r\n            showDropdown: false\r\n        }\r\n    }\r\n\r\n    handleShowDropdown = (e) => {\r\n        e.preventDefault();\r\n        const { item } = this.props;\r\n        let updatedItem = Object.values({ item })\r\n        let showDropdownBool = this.state.showDropdown\r\n        this.setState({\r\n            itemToEdit: updatedItem[0],\r\n            showDropdown: !showDropdownBool\r\n        })\r\n        console.log(showDropdownBool)\r\n    }\r\n\r\n\r\n    handleDeptUpdate = (e) => {\r\n        // const { item } = this.props;\r\n        // let updatedItem = Object.values({ item })\r\n        this.setState({\r\n            newDept: e.target.value,\r\n            // itemToEdit: updatedItem[0]\r\n        })\r\n        // console.log('values', Object.values({ item }))\r\n        // console.log(updatedItem[0])\r\n        // console.log(this.state.itemToEdit)\r\n    }\r\n\r\n    handleUpdateSubmit = (e) => {\r\n        let deletePath = `/${this.props.dept}/${this.props.itemKey}/`\r\n        e.preventDefault();\r\n        let newInputted = this.state.itemToEdit\r\n        let updatedItemNotCompletedArray = [true, newInputted]\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.child(this.state.newDept).push(updatedItemNotCompletedArray)\r\n        dbRef.child(deletePath).remove()\r\n    }\r\n\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <FontAwesomeIcon onClick={this.handleShowDropdown} icon= {[\"far\", \"edit\"]} className=\"edit\"/>\r\n                {/* <button onClick={this.handleShowDropdown}>Edit</button> */}\r\n                {\r\n                    (this.state.showDropdown)\r\n                    ? <form>\r\n                        <label htmlFor=\"location\"> Change location: </label>\r\n                        <select name=\"location\" id=\"location\" onChange={this.handleDeptUpdate}>\r\n                            {/* <option value=\"\">Change</option> */}\r\n                            <option value=\"Unknown\">Unknown</option>\r\n                            <option value=\"Deli\">Deli</option>\r\n                            <option value=\"Meat\">Meat</option>\r\n                            <option value=\"Produce\">Produce</option>\r\n                            <option value=\"Seafood\">Seafood</option>\r\n                        </select>\r\n                        {/* <button></button> */}\r\n                        <FontAwesomeIcon onClick={this.handleUpdateSubmit} icon={[\"far\", \"save\"]} className=\"save\"/>      \r\n                    </form>\r\n                    : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UpdateItem;\r\n\r\n\r\n","import './App.scss';\r\nimport { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport InputNewItem from './InputNewItem.js';\r\nimport RemoveItem from './RemoveItem.js';\r\nimport UpdateItem from './UpdateItem.js';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEdit as farEdit, faSave as farSave, faTrashAlt as farTrashAlt, faCheckSquare as farCheckSquare, faSquare as farSquare, faPlusSquare, faMinusSquare as farMinusSquare } from '@fortawesome/free-regular-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlibrary.add(farEdit, farSave, farTrashAlt, farCheckSquare, farSquare, faPlusSquare, farMinusSquare);\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      departments: [],\r\n      enterItem: '',\r\n      newDept: ''\r\n    }\r\n  }\r\n\r\n  // connect to Firebase and get existing and updated data from the database\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on('value', (data) => {\r\n      const firebaseDataObject = data.val();\r\n      if (firebaseDataObject === null) {\r\n        this.setState({\r\n          enterItem: 'Enter an item to your list'\r\n        }) \r\n      } else {\r\n        let deptArray = Object.keys(firebaseDataObject).map((key) => {\r\n          return [(key), firebaseDataObject[key]];\r\n        })\r\n        this.setState({\r\n          departments: deptArray,\r\n          enterItem: ''\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  removeItemFromDb = (itemKey, dept) => {\r\n    const dbRef = firebase.database().ref();\r\n    let deptOrAisle = `/${dept[0]}/`;\r\n    dbRef.child(deptOrAisle + itemKey).remove();\r\n    dbRef.on('value', (data) => {\r\n      const firebaseDataObject = data.val();\r\n      if (firebaseDataObject === null) {\r\n        this.setState({\r\n        departments: []\r\n      })\r\n      }\r\n    })\r\n  }\r\n\r\n  markCompleted = (itemKey, dept, bool) => {\r\n    const dbRef = firebase.database().ref();\r\n    let completePath = `/${dept[0]}/${itemKey}/`;\r\n    if (bool === false) {\r\n      dbRef.child(completePath).update({0: true});\r\n    } else {\r\n      dbRef.child(completePath).update({0: false});\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className='wrapper'>\r\n        <InputNewItem />\r\n        <h2>{this.state.enterItem}</h2>\r\n        {\r\n          this.state.departments.map((singleDept, i) => {\r\n            let dept = singleDept;\r\n            let itemsArray = [];\r\n            let completed = []\r\n            for (let idKey in singleDept[1]) {\r\n              const itemIds = [idKey, singleDept[1][idKey]];\r\n              itemsArray.push(itemIds);\r\n              completed.push(singleDept[1][idKey][0]);\r\n            } \r\n            return (\r\n              <div key={i}>\r\n                <ul>\r\n                  <li>\r\n                    <p>{singleDept[0]}</p>\r\n                      {\r\n                        itemsArray.map((item, index) => {\r\n                          return (\r\n                            <ul key={item[0]}>\r\n                              <li>\r\n                                <div className=\"item\" onClick={ () => { this.markCompleted(item[0], dept, item[1][0]) }}>\r\n                                  <FontAwesomeIcon icon={ (completed[index]) ? [\"far\", \"check-square\"] : [\"far\", \"square\"] }/>\r\n                                    <p className={ (completed[index]) ? \"done\" : \"notDone\" }>\r\n                                      {item[1]}\r\n                                    </p>\r\n                                </div>\r\n                            \r\n                                <RemoveItem         \r\n                                  remove={ () => {\r\n                                    this.removeItemFromDb(item[0], dept) \r\n                                  }}\r\n                                />\r\n                              \r\n                                <UpdateItem\r\n                                  item={item[1][1]}\r\n                                  itemKey={item[0]} \r\n                                  dept={dept[0]}\r\n                                />\r\n                              </li>\r\n                            </ul>\r\n                          )\r\n                        })\r\n                      }\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}